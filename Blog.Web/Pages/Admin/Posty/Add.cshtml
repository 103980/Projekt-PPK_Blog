@page
@model Blog.Web.Pages.Admin.Posty.AddModel
@{
}


<div class="bg-primary bg-opacity-10 py-3">
    <div class="container">
        <h1>Dodaj posty</h1>
    </div>
</div>

<div>
    <div class="container">
        <form method="post">
            <div class="mb-3">
                <label for="heading" class="form-label">Nagłówek</label>
                <input type="text" class="form-control" id="heading" asp-for="AddBlogPostRequest.Heading">
            </div>

            <div class="mb-3">
                <label for="pageTitle" class="form-label">Tytuł Strony</label>
                <input type="text" class="form-control" id="pageTitle" asp-for="AddBlogPostRequest.PageTitle">
            </div>

            <div class="mb-3">
                <label for="content" class="form-label">Treść</label>
                <textarea class="form-control" id="content" asp-for="AddBlogPostRequest.Content"></textarea>
            </div>

            <div class="mb-3">
                <label for="shortDescription" class="form-label">Krótki opis</label>
                <input type="text" class="form-control" id="shortDescription" asp-for="AddBlogPostRequest.ShortDescription">
            </div>


            <div class="mb-3">
                <label for="featuredImageUpload" class="form-label">Obraz</label>
                <input type="file" id="featuredImageUpload" asp-for="FeaturedImage"/>
                <img src="" id="featuredImageDisplay" style="display:none; width:300px;"/>
            </div>



            <div class="mb-3">
                <label for="featuredImageURL" class="form-label"> Link do obrazu</label>
                <input type="text" class="form-control" id="featuredImageURL" asp-for="AddBlogPostRequest.FeaturedImageUrl">
            </div>

            <div class="mb-3">
                <label for="urlHandle" class="form-label">Url Handle</label>
                <input type="text" class="form-control" id="urlHandle" asp-for="AddBlogPostRequest.UrlHandle">
            </div>

            <div class="mb-3">
                <label for="publishedDate" class="form-label">Data dodania</label>
                <input type="date" class="form-control" id="publishedDate" asp-for="AddBlogPostRequest.PublishedDate">
            </div>

            <div class="mb-3">
                <label for="author" class="form-label">Autor</label>
                <input type="text" class="form-control" id="author" asp-for="AddBlogPostRequest.Author">
            </div>

            <div class="form-check mb-3">
                <input class="form-check-input" type="checkbox" value="" id="isVisible" asp-for="AddBlogPostRequest.Visible">
                <label class="form-check-label" for="isVisible">
                    Widoczny?
                </label>
            </div>

            <div class="mb-3">
                <button class="btn btn-primary" type="submit">Gotowe!</button>
            </div>



        </form>
    </div>
</div>

            @section Scripts {

    <script src="https://cdn.tiny.cloud/1/n70skoc5ofsft3z5qclyxnzzq0vhry0nls5aj5foum3n98ow/tinymce/7/tinymce.min.js" referrerpolicy="origin"></script>
 <script>

        tinymce.init({
            selector: '#content',
            images_upload_url: '/api/images',
            // images_upload_base_path: '/api/images',
            plugins: 'anchor autolink charmap codesample emoticons link lists searchreplace table visualblocks wordcount checklist mediaembed casechange export formatpainter pageembed linkchecker a11ychecker tinymcespellchecker permanentpen powerpaste advtable advcode editimage advtemplate ai mentions tinycomments tableofcontents footnotes mergetags autocorrect typography inlinecss markdown',
            toolbar: 'undo redo | blocks fontfamily fontsize | bold italic underline strikethrough | image link image media table mergetags | addcomment showcomments | spellcheckdialog a11ycheck typography | align lineheight | checklist numlist bullist indent outdent | emoticons charmap | removeformat',
            tinycomments_mode: 'embedded',
            tinycomments_author: 'Author name',
            mergetags_list: [
                { value: 'First.Name', title: 'First Name' },
                { value: 'Email', title: 'Email' },
            ],
            ai_request: (request, respondWith) => respondWith.string(() => Promise.reject("See docs to implement AI Assistant")),
        });



        const featuredImageUploadElement = document.getElementById('featuredImageUpload');
     const featuredImageURL = document.getElementById('featuredImageURL');
        const featuredImageDisplay = document.getElementById('featuredImageDisplay');

        async function uploadFeaturedImage(e) {
            console.log(e.target.files[0]);

            let data = new FormData();
            data.append('file', e.target.files[0]);

            await fetch('/api/images', {
                method: 'POST',
                headers: {
                    'Accept': '*/*',
                },
                body: data
            }).then(response => response.json())
                .then(result => {
                    featuredImageURL.value = result.link;
                    featuredImageDisplay.style.display = 'block';
                    featuredImageDisplay.src = result.link;
                   
                });
        }


     featuredImageUploadElement.addEventListener('change', uploadFeaturedImage);

    </script>
}