@page "/blogs/{urlHandle}"
@model Blog.Web.Pages.Blogs.DetailsModel
@using Microsoft.AspNetCore.Identity
@inject UserManager<IdentityUser> userManager
@inject SignInManager<IdentityUser> signInManager

@{
    ViewData["Title"] = Model.BlogPost.PageTitle;
}

<div class="container my-3">
    <div class="row justify-content-center">
        <div class="col-12 col-lg-6">
            @if (Model.BlogPost != null)
            {
                <h2 class="mb-3">@Model.BlogPost.Heading</h2>
                <div class="d-flex justify-content-between">
                    <span class="text-secondary">@Model.BlogPost.Author</span>
                    <span class="text-secondary">@Model.BlogPost.PublishedDate.ToShortDateString()</span>
                </div>
                <div class="mb-2">
                    <span>
                        @if (signInManager.IsSignedIn(User))
                        {
                            @if (Model.isLiked)
                            {
                                <a style="cursor: pointer">
                                    <i class="bi bi-hand-thumbs-up-fill"></i>
                                </a>
                            }
                            else
                            {
                                <a id=btnLike style="cursor: pointer">
                                    <i class="bi bi-hand-thumbs-up"></i>
                                </a>
                            }
                        }


                        <span id="totalLikes">@Model.TotalLikes</span> polubień
                    </span>
                </div>
                <img src="@Model.BlogPost.FeaturedImageUrl" class="d-block img-fluid mb-3" />

                <div class="mb-3" blog-details>
                    @Html.Raw(Model.BlogPost.Content)
                </div>


                //Comment Section

                <div class="card">
                    <div class="card-header">
                        <h5> Komentarze</h5>
                        @if (signInManager.IsSignedIn(User))
                        {
                            <form method="post">
                                <div class="mb-2">
                                    <label class="form-label">Treść</label>
                                    <input type="text" class="form-control" asp-for="CommentContent" />
                                </div>
                                <div class="mb-2">
                                    <button type="submit" class="btn btn-dark">Dodaj swój komentarz</button>
                                    <input type="hidden" asp-for="BlogPostId" />
                                </div>
                            </form>
                        }


                    </div>
                    <div class="card-body">
                        @if (Model.Comments != null && Model.Comments.Any())
                        {
                            @foreach (var comment in Model.Comments)
                            {
                                <div class="card mb-2">
                                    <div class="card-body">
                                        <div>
                                            @comment.Description
                                        </div>
                                        <div class="d-flex justify-content-between">
                                            <span class="text-secondary">@comment.Username</span>
                                            <span class="text-secondary">@comment.DateAdded.ToShortDateString()</span>
                                        </div>
                                    </div>
                                </div>
                            }
                        }
                        else
                        {
                            <p>Nikt jeszcze nie dodał komentarza do tego posta.</p>
                        }

                    </div>
                </div>


            }
            else
            {
                <h3>Coś poszło nie tak.</h3>
            }


        </div>
    </div>
</div>

@section Scripts {
    <script>
        const btnLike = document.getElementById('btnLike');
        const totalLikesCount = document.getElementById('totalLikes')

        async function getTotalLikes() {
            fetch('/api/blogpostlike/@Model.BlogPost.Id/totallikes', {
                method: 'GET',
                headers: {
                    'Content-Type': 'application/json',
                    'Accept': '*/*'
                },
            })

                .then(data => data.json())
                .then(result => totalLikesCount.innerHTML = result);
        }

        async function registerLike() {

            fetch('/api/blogpostlike/add', {
                method: 'POST',
                headers: {
                    'Content-Type': 'Application/json',
                    'Accept': '*/*'
                },
                body: JSON.stringify({ blogPostId: '@Model.BlogPost.Id', userId: '@userManager.GetUserId(User)' })
            })
                .then(() => {
                    btnLike.innerHTML = '<i class="bi bi-hand-thumbs-up-fill"></i>';
                    btnLike.removeEventListener('click', registerLike);
                    getTotalLikes();
                });

        }

        btnLike.addEventListener('click', registerLike)
    </script>
}